<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.winhxd.b2c.order.dao.OrderInfoMapper">
    <resultMap id="BaseResultMap" type="com.winhxd.b2c.common.domain.order.model.OrderInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_no" jdbcType="CHAR" property="orderNo"/>
        <result column="customer_id" jdbcType="BIGINT" property="customerId"/>
        <result column="store_id" jdbcType="BIGINT" property="storeId"/>
        <result column="valuation_type" jdbcType="SMALLINT" property="valuationType"/>
        <result column="order_status" jdbcType="SMALLINT" property="orderStatus"/>
        <result column="pickup_code" jdbcType="VARCHAR" property="pickupCode"/>
        <result column="random_reduction_money" jdbcType="DECIMAL" property="randomReductionMoney"/>
        <result column="coupon_titles" jdbcType="VARCHAR" property="couponTitles"/>
        <result column="coupon_hxd_money" jdbcType="DECIMAL" property="couponHxdMoney"/>
        <result column="coupon_brand_money" jdbcType="DECIMAL" property="couponBrandMoney"/>
        <result column="order_total_money" jdbcType="DECIMAL" property="orderTotalMoney"/>
        <result column="real_payment_money" jdbcType="DECIMAL" property="realPaymentMoney"/>
        <result column="sku_quantity" jdbcType="INTEGER" property="skuQuantity"/>
        <result column="sku_category_quantity" jdbcType="INTEGER" property="skuCategoryQuantity"/>
        <result column="pay_type" jdbcType="SMALLINT" property="payType"/>
        <result column="pay_status" jdbcType="SMALLINT" property="payStatus"/>
        <result column="payment_serial_num" jdbcType="VARCHAR" property="paymentSerialNum"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="pay_finish_datetime" jdbcType="TIMESTAMP" property="payFinishDateTime"/>
        <result column="pickup_datetime" jdbcType="TIMESTAMP" property="pickupDateTime"/>
        <result column="finish_datetime" jdbcType="TIMESTAMP" property="finishDateTime"/>
        <result column="cancel_datetime" jdbcType="TIMESTAMP" property="cancelDateTime"/>
        <result column="refund_datetime" jdbcType="TIMESTAMP" property="refundDateTime"/>
        <result column="apply_refund_datetime" jdbcType="TIMESTAMP" property="applyRefundDatetime"/>
        <result column="accept_order_datetime" jdbcType="TIMESTAMP" property="acceptOrderDatetime"/>
        <result column="pickup_type" jdbcType="SMALLINT" property="pickupType"/>
        <result column="inviter_code" jdbcType="VARCHAR" property="inviterCode"/>
        <result column="updated" jdbcType="TIMESTAMP" property="updated"/>
        <result column="cancel_reason" jdbcType="VARCHAR" property="cancelReason"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="region_code" jdbcType="VARCHAR" property="regionCode"/>
        <result column="imie" jdbcType="VARCHAR" property="imie"/>
        <result column="created_by" jdbcType="BIGINT" property="createdBy"/>
        <result column="updated_by" jdbcType="BIGINT" property="updatedBy"/>
        <result column="updated_by_name" jdbcType="VARCHAR" property="updatedByName"/>
        <result column="created_by_name" jdbcType="VARCHAR" property="createdByName"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, order_no, customer_id, store_id, valuation_type, order_status, pickup_code, random_reduction_money, coupon_titles,
        coupon_hxd_money, coupon_brand_money, order_total_money, real_payment_money, sku_quantity, sku_category_quantity, pay_type,
        pay_status, payment_serial_num, created, pay_finish_datetime, pickup_datetime, finish_datetime, cancel_datetime, refund_datetime,apply_refund_datetime, accept_order_datetime,
        pickup_type, inviter_code, updated, cancel_reason, remarks, region_code, imie, created_by,
        updated_by, updated_by_name, created_by_name
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByOrderNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_info
        where order_no = #{orderNo,jdbcType=VARCHAR}
    </select>
    <select id="selectOrderByCustomerId" resultType="com.winhxd.b2c.common.domain.order.model.OrderInfo">
        select
        <include refid="Base_Column_List"/>
        from order_info
        where customer_id = #{customerId,jdbcType=BIGINT}
        order by created desc
    </select>
    <insert id="insert" parameterType="com.winhxd.b2c.common.domain.order.model.OrderInfo" keyProperty="id"
     keyColumn="id" useGeneratedKeys="true">
        insert into order_info (id, order_no, customer_id,
        store_id, valuation_type, order_status,
        pickup_code, random_reduction_money, coupon_titles, coupon_hxd_money,
        coupon_brand_money, order_total_money, real_payment_money,
        sku_quantity, sku_category_quantity,
        pay_type, pay_status, payment_serial_num, created,
        pay_finish_datetime, pickup_datetime,
        finish_datetime, cancel_datetime, refund_datetime, apply_refund_datetime,accept_order_datetime, pickup_type,
        inviter_code, updated, cancel_reason,
        remarks, region_code, imie,
        created_by, updated_by, updated_by_name,
        created_by_name)
        values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=CHAR}, #{customerId,jdbcType=BIGINT},
        #{storeId,jdbcType=BIGINT}, #{valuationType,jdbcType=SMALLINT}, #{orderStatus,jdbcType=SMALLINT},
        #{pickupCode,jdbcType=VARCHAR}, #{randomReductionMoney,jdbcType=DECIMAL}, #{couponTitles,jdbcType=VARCHAR}, #{couponHxdMoney,jdbcType=DECIMAL},
        #{couponBrandMoney,jdbcType=DECIMAL}, #{orderTotalMoney,jdbcType=DECIMAL}, #{realPaymentMoney,jdbcType=DECIMAL},
        #{sku_quantity,jdbcType=INTEGER}, #{sku_category_quantity,jdbcType=INTEGER},
        #{payType,jdbcType=SMALLINT}, #{payStatus,jdbcType=SMALLINT}, #{paymentSerialNum,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP},
        #{payFinishDateTime,jdbcType=TIMESTAMP}, #{pickupDateTime,jdbcType=TIMESTAMP},
        #{finishDateTime,jdbcType=TIMESTAMP}, #{cancelDateTime,jdbcType=TIMESTAMP}, #{refundDateTime,jdbcType=TIMESTAMP},
        #{applyRefundDatetime,jdbcType=TIMESTAMP}, #{acceptOrderDatetime,jdbcType=TIMESTAMP}, #{pickupType,jdbcType=SMALLINT},
        #{inviterCode,jdbcType=VARCHAR}, #{updated,jdbcType=TIMESTAMP}, #{cancelReason,jdbcType=VARCHAR},
        #{remarks,jdbcType=VARCHAR}, #{regionCode,jdbcType=VARCHAR}, #{imie,jdbcType=VARCHAR},
        #{createdBy,jdbcType=BIGINT}, #{updatedBy,jdbcType=BIGINT}, #{updatedByName,jdbcType=VARCHAR},
        #{createdByName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.winhxd.b2c.common.domain.order.model.OrderInfo" keyProperty="id"
     keyColumn="id" useGeneratedKeys="true">
        insert into order_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="valuationType != null">
                valuation_type,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
            <if test="paymentSerialNum != null">
                payment_serial_num,
            </if>
            <if test="pickupCode != null">
                pickup_code,
            </if>
            <if test="randomReductionMoney != null">
                random_reduction_money,
            </if>
            <if test="couponTitles != null">
                coupon_titles,
            </if>
            <if test="couponHxdMoney != null">
                coupon_hxd_money,
            </if>
            <if test="couponBrandMoney != null">
                coupon_brand_money,
            </if>
            <if test="orderTotalMoney != null">
                order_total_money,
            </if>
            <if test="realPaymentMoney != null">
                real_payment_money,
            </if>
            <if test="skuQuantity != null">
                sku_quantity,
            </if>
            <if test="skuCategoryQuantity != null">
                sku_category_quantity,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="payFinishDateTime != null">
                pay_finish_datetime,
            </if>
            <if test="pickupDateTime != null">
                pickup_datetime,
            </if>
            <if test="finishDateTime != null">
                finish_datetime,
            </if>
            <if test="cancelDateTime != null">
                cancel_datetime,
            </if>
            <if test="applyRefundDatetime != null">
                apply_refund_datetime,
            </if>
            <if test="acceptOrderDatetime != null">
                accept_order_datetime,
            </if>
            <if test="refundDateTime != null">
                refund_datetime,
            </if>
            <if test="pickupType != null">
                pickup_type,
            </if>
            <if test="inviterCode != null">
                inviter_code,
            </if>
            <if test="updated != null">
                updated,
            </if>
            <if test="cancelReason != null">
                cancel_reason,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="regionCode != null">
                region_code,
            </if>
            <if test="imie != null">
                imie,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
            <if test="updatedByName != null">
                updated_by_name,
            </if>
            <if test="createdByName != null">
                created_by_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=CHAR},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=BIGINT},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=BIGINT},
            </if>
            <if test="valuationType != null">
                #{valuationType,jdbcType=SMALLINT},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=SMALLINT},
            </if>
            <if test="pickupCode != null">
                #{pickupCode,jdbcType=VARCHAR},
            </if>
            <if test="randomReductionMoney != null">
                #{randomReductionMoney,jdbcType=DECIMAL},
            </if>
            <if test="couponTitles != null">
                #{couponTitles,jdbcType=VARCHAR},
            </if>
            <if test="couponHxdMoney != null">
                #{couponHxdMoney,jdbcType=DECIMAL},
            </if>
            <if test="couponBrandMoney != null">
                #{couponBrandMoney,jdbcType=DECIMAL},
            </if>
            <if test="orderTotalMoney != null">
                #{orderTotalMoney,jdbcType=DECIMAL},
            </if>
            <if test="realPaymentMoney != null">
                #{realPaymentMoney,jdbcType=DECIMAL},
            </if>
            <if test="skuQuantity != null">
            	#{skuQuantity,jdbcType=INTEGER},
            </if>
            <if test="skuCategoryQuantity != null">
            	#{skuCategoryQuantity,jdbcType=INTEGER},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=SMALLINT},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=SMALLINT},
            </if>
			<if test="paymentSerialNum != null">
                #{paymentSerialNum,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="payFinishDateTime != null">
                #{payFinishDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pickupDateTime != null">
                #{pickupDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishDateTime != null">
                #{finishDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="refundDateTime != null">
                #{refundDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="acceptOrderDatetime != null">
                #{acceptOrderDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="applyRefundDatetime != null">
                #{applyRefundDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="cancelDateTime != null">
                #{cancelDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pickupType != null">
                #{pickupType,jdbcType=SMALLINT},
            </if>
            <if test="inviterCode != null">
                #{inviterCode,jdbcType=VARCHAR},
            </if>
            <if test="updated != null">
                #{updated,jdbcType=TIMESTAMP},
            </if>
            <if test="cancelReason != null">
                #{cancelReason,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="regionCode != null">
                #{regionCode,jdbcType=VARCHAR},
            </if>
            <if test="imie != null">
                #{imie,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=BIGINT},
            </if>
            <if test="updatedByName != null">
                #{updatedByName,jdbcType=VARCHAR},
            </if>
            <if test="createdByName != null">
                #{createdByName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.winhxd.b2c.common.domain.order.model.OrderInfo">
        update order_info
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=CHAR},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=BIGINT},
            </if>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=BIGINT},
            </if>
            <if test="valuationType != null">
                valuation_type = #{valuationType,jdbcType=SMALLINT},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=SMALLINT},
            </if>
            <if test="pickupCode != null">
                pickup_code = #{pickupCode,jdbcType=VARCHAR},
            </if>
            <if test="randomReductionMoney != null">
                random_reduction_money = #{randomReductionMoney,jdbcType=DECIMAL},
            </if>
            <if test="couponTitles != null">
                coupon_titles = #{couponTitles,jdbcType=VARCHAR},
            </if>
            <if test="couponHxdMoney != null">
                coupon_hxd_money = #{couponHxdMoney,jdbcType=DECIMAL},
            </if>
            <if test="couponBrandMoney != null">
                coupon_brand_money = #{couponBrandMoney,jdbcType=DECIMAL},
            </if>
            <if test="orderTotalMoney != null">
                order_total_money = #{orderTotalMoney,jdbcType=DECIMAL},
            </if>
            <if test="realPaymentMoney != null">
                real_payment_money = #{realPaymentMoney,jdbcType=DECIMAL},
            </if>
            <if test="skuQuantity != null">
            	sku_quantity = #{skuQuantity,jdbcType=INTEGER},
            </if>
            <if test="skuCategoryQuantity != null">
            	sku_category_quantity = #{skuCategoryQuantity,jdbcType=INTEGER},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=SMALLINT},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=SMALLINT},
            </if>
            <if test="paymentSerialNum != null">
                payment_serial_num = #{paymentSerialNum,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="payFinishDateTime != null">
                pay_finish_datetime = #{payFinishDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pickupDateTime != null">
                pickup_datetime = #{pickupDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishDateTime != null">
                finish_datetime = #{finishDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="refundDateTime != null">
                accept_order_datetime = #{acceptOrderDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="refundDateTime != null">
                apply_refund_datetime = #{applyRefundDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="refundDateTime != null">
                refund_datetime = #{refundDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cancelDateTime != null">
                cancel_datetime = #{cancelDateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pickupType != null">
                pickup_type = #{pickupType,jdbcType=SMALLINT},
            </if>
            <if test="inviterCode != null">
                inviter_code = #{inviterCode,jdbcType=VARCHAR},
            </if>
            <if test="updated != null">
                updated = #{updated,jdbcType=TIMESTAMP},
            </if>
            <if test="cancelReason != null">
                cancel_reason = #{cancelReason,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="regionCode != null">
                region_code = #{regionCode,jdbcType=VARCHAR},
            </if>
            <if test="imie != null">
                imie = #{imie,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=BIGINT},
            </if>
            <if test="updatedByName != null">
                updated_by_name = #{updatedByName,jdbcType=VARCHAR},
            </if>
            <if test="createdByName != null">
                created_by_name = #{createdByName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.winhxd.b2c.common.domain.order.model.OrderInfo">
    update order_info
    set order_no = #{orderNo,jdbcType=CHAR},
      customer_id = #{customerId,jdbcType=BIGINT},
      store_id = #{storeId,jdbcType=BIGINT},
      valuation_type = #{valuationType,jdbcType=SMALLINT},
      order_status = #{orderStatus,jdbcType=SMALLINT},
      pickup_code = #{pickupCode,jdbcType=VARCHAR},
      random_reduction_money = #{randomReductionMoney,jdbcType=DECIMAL},
      coupon_titles = #{couponTitles,jdbcType=VARCHAR},
      coupon_hxd_money = #{couponHxdMoney,jdbcType=DECIMAL},
      coupon_brand_money = #{couponBrandMoney,jdbcType=DECIMAL},
      order_total_money = #{orderTotalMoney,jdbcType=DECIMAL},
      real_payment_money = #{realPaymentMoney,jdbcType=DECIMAL},
      sku_quantity = #{skuQuantity,jdbcType=INTEGER},
      sku_category_quantity = #{skuCategoryQuantity,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=SMALLINT},
      pay_status = #{payStatus,jdbcType=SMALLINT},
      payment_serial_num = #{paymentSerialNum,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      pay_finish_datetime = #{payFinishDateTime,jdbcType=TIMESTAMP},
      pickup_datetime = #{pickupDateTime,jdbcType=TIMESTAMP},
      finish_datetime = #{finishDateTime,jdbcType=TIMESTAMP},
      cancel_datetime = #{cancelDateTime,jdbcType=TIMESTAMP},
      refund_datetime = #{refundDateTime,jdbcType=TIMESTAMP},
      apply_refund_datetime = #{applyRefundDatetime,jdbcType=TIMESTAMP},
      accept_order_datetime = #{acceptOrderDatetime,jdbcType=TIMESTAMP},
      pickup_type = #{pickupType,jdbcType=SMALLINT},
      inviter_code = #{inviterCode,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=TIMESTAMP},
      cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      region_code = #{regionCode,jdbcType=VARCHAR},
      imie = #{imie,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=BIGINT},
      updated_by = #{updatedBy,jdbcType=BIGINT},
      updated_by_name = #{updatedByName,jdbcType=VARCHAR},
      created_by_name = #{createdByName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <resultMap id="OrderInfoListResultMap" type="com.winhxd.b2c.common.domain.order.vo.OrderInfoDetailVO" extends="BaseResultMap">
    	<result column="discount_money" jdbcType="DECIMAL" property="discountMoney"/>
        <collection property="orderItemVoList" ofType="com.winhxd.b2c.common.domain.order.vo.OrderItemVO">
            <id column="itemId" property="itemId"/>
            <result column="order_no" property="orderNo"/>
            <result column="skuCode" property="skuCode"/>
            <result column="amount" property="amount"/>
            <result column="price" property="price"/>
            <result column="skuUrl" property="skuUrl"/>
            <result column="skuDesc" property="skuDesc"/>
        </collection>
    </resultMap>
    <resultMap id="orderIdResult" type="java.lang.Long" >
	    <result column="id" property="orderId" jdbcType="BIGINT" />
	</resultMap>
	<sql id="order_info_list_orderBy">
		order by info.created desc,info.order_no,item.sku_code
	</sql>
	<sql id="order_info_orderBy">
		order by info.created desc,info.order_no
	</sql>
	<sql id="order_item_column">
		,item.id AS itemId
        ,item.sku_code AS skuCode
        ,item.amount AS amount
        ,item.price AS price
        ,item.sku_url AS skuUrl
        ,item.sku_desc AS skuDesc
	</sql>
    <sql id="Order_Info_List">
        info.id, info.order_no, customer_id, store_id, valuation_type, order_status, pickup_code, order_total_money, coupon_titles, 
        real_payment_money, order_total_money-real_payment_money discount_money, sku_quantity, sku_category_quantity, pay_type,
        pay_status, info.created, pickup_datetime,pay_finish_datetime, finish_datetime, cancel_datetime,refund_datetime,accept_order_datetime,apply_refund_datetime,
        pickup_type, cancel_reason, remarks
    </sql>
    <select id="selectOrderInfoListByCustomerId" resultMap="OrderInfoListResultMap">
        select
        <include refid="Order_Info_List"/>
        <include refid="order_item_column"></include>
        from order_info info LEFT JOIN order_item item on item.order_no=info.order_no
        where info.customer_id = #{customerId,jdbcType=BIGINT}
        <include refid="order_info_list_orderBy"></include>
    </select>
    <select id="listOrder4Management" resultMap="orderIdResult">
        <if test="condition.orderNo != null and condition.orderNo !=''">
            <bind name="orderNo" value="condition.orderNo + '%'" />
        </if>
        select
        id
        from order_info info
        where 1=1
        <if test="condition.storeId != null">
            and store_id = #{condition.storeId,jdbcType=BIGINT}
        </if>
        <if test="condition.customerId != null">
            and customer_id = #{condition.customerId,jdbcType=BIGINT}
        </if> 
        <if test="condition.dateInterval != null and condition.dateInterval.start != null">
            and created &gt;= #{condition.dateInterval.start,jdbcType=TIMESTAMP}
        </if>
        <if test="condition.dateInterval != null and condition.dateInterval.end != null">
            and created &lt;= #{condition.dateInterval.end,jdbcType=TIMESTAMP}
        </if>
        <if test="condition.moneyInterval != null and condition.moneyInterval.start != null">
            and created &gt;= #{condition.moneyInterval.start,jdbcType=DECIMAL}
        </if>
        <if test="condition.moneyInterval != null and condition.moneyInterval.end != null">
            and created &lt;= #{condition.moneyInterval.end,jdbcType=DECIMAL}
        </if>
        <if test="condition.valuationType != null">
            and valuation_type = #{condition.valuationType,jdbcType=SMALLINT}
        </if>
        <if test="condition.payType != null">
            and pay_type = #{condition.payType,jdbcType=SMALLINT}
        </if>
        <if test="condition.orderStatus != null">
            and order_status = #{condition.orderStatus,jdbcType=SMALLINT}
        </if>
        <if test="condition.regionCode != null and condition.regionCode.length > 0">
            and region_code in 
            <foreach item="item" index="index" collection="condition.regionCode" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="condition.orderNo != null and condition.orderNo !=''">
            and order_no like #{orderNo}
        </if>
        <if test="condition.useCoupon != null and condition.useCoupon == 1">
            and coupon_titles is not null
        </if>
        <if test="condition.useCoupon != null and condition.useCoupon == 2">
            and coupon_titles is null
        </if>
        <if test="condition.orderNos != null and condition.orderNos.length > 0">
            and info.order_no in 
        	<foreach item="item" index="index" collection="condition.orderNos" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <include refid="order_info_orderBy"></include>
    </select>
    <select id="listOrderInOrderIds" resultMap="OrderInfoListResultMap">
        select
        <include refid="Order_Info_List"/>
        <include refid="order_item_column"></include>
        from order_info info LEFT JOIN order_item item on item.order_no=info.order_no
        where 1=1
        and info.id in 
    	<foreach item="item" index="index" collection="orderIds" open="(" separator="," close=")">
                #{item}
        </foreach>
        <include refid="order_info_list_orderBy"></include>
    </select>
    <sql id="Order_Info_List_4_store">
        info.id, info.order_no, customer_id, store_id, valuation_type, order_status, order_total_money, coupon_titles, 
        real_payment_money, order_total_money-real_payment_money discount_money, sku_quantity, sku_category_quantity, pay_type,
        pay_status, info.created, pickup_datetime,pay_finish_datetime, finish_datetime, cancel_datetime, refund_datetime, accept_order_datetime, apply_refund_datetime,
        pickup_type, cancel_reason, remarks
    </sql>
    <select id="listOrder4Store" resultMap="orderIdResult">
        select
        id
        from order_info info
        where 1=1
        <if test="condition.orderStatus != null">
            and order_status = #{condition.orderStatus,jdbcType=SMALLINT}
        </if>
        <if test="condition.pickupCode != null and condition.pickupCode !=''">
            and pickup_code = #{condition.pickupCode,jdbcType=VARCHAR}
        </if>
        and store_id = #{storeId,jdbcType=BIGINT}
        <include refid="order_info_orderBy"></include>
    </select>
    <select id="listOrder4StoreInOrderIds" resultMap="OrderInfoListResultMap">
        select
        <include refid="Order_Info_List_4_store"/>
        <include refid="order_item_column"></include>
        from order_info info LEFT JOIN order_item item on item.order_no=info.order_no
        where 1=1
        and info.id in 
    	<foreach item="item" index="index" collection="orderIds" 
                     open="(" separator="," close=")">
                    #{item}
        </foreach>
        <include refid="order_info_list_orderBy"></include>
    </select>
    <select id="selectOrderInfoByOrderNo" resultMap="OrderInfoListResultMap">
        select
        <include refid="Order_Info_List"/>
        <include refid="order_item_column"></include>
        from order_info info LEFT JOIN order_item item on item.order_no=info.order_no
        where info.order_no = #{orderNo,jdbcType=VARCHAR}
        <include refid="order_info_list_orderBy"></include>
    </select>
    <update id="updateOrderStatusForCancel">
        update order_info
        set order_status=99,cancel_reason = #{cancelReason,jdbcType=VARCHAR},cancel_datetime = now(),pickup_code=null
        where order_no=#{orderNo,jdbcType=VARCHAR} AND pay_status != 1
    </update>

    <resultMap id="StoreOrderSalesSummaryMap" type="com.winhxd.b2c.common.domain.order.vo.StoreOrderSalesSummaryVO">
        <result column="turnover" jdbcType="DECIMAL" property="turnover"/>
        <result column="orderNum" jdbcType="INTEGER" property="orderNum"/>
        <result column="storeId" jdbcType="BIGINT" property="storeId"/>
    </resultMap>
    <select id="getStoreOrderTurnover" resultMap="StoreOrderSalesSummaryMap">
        select
        	ifnull(sum(order_total_money),0) turnover,
        	ifnull(count(*),0) orderNum,
        	store_id storeId
        from order_info
        where store_id = #{storeId,jdbcType=BIGINT}
        and pay_status = 1
        and pay_finish_datetime &gt;= #{startDateTime,jdbcType=TIMESTAMP}
        and pay_finish_datetime &lt;= #{endDateTime,jdbcType=TIMESTAMP}
        and order_status not in (33, 66, 77, 99)
        group by store_id
    </select>
    <resultMap id="StoreOrderSalesSummaryMap1" type="com.winhxd.b2c.common.domain.order.vo.StoreOrderSalesSummaryVO">
        <result column="customerNum" jdbcType="INTEGER" property="customerNum"/>
        <result column="skuQuantity" jdbcType="INTEGER" property="skuQuantity"/>
        <result column="skuCategoryQuantity" jdbcType="INTEGER" property="skuCategoryQuantity"/>
    </resultMap>
    <select id="getStoreOrderCustomerNum" resultMap="StoreOrderSalesSummaryMap1">
        select
        	ifnull(count(distinct customer_id),0) customerNum,
        	ifnull(sum(sku_quantity),0) skuQuantity,
        	ifnull(sum(sku_category_quantity),0) skuCategoryQuantity
        from order_info
        where store_id = #{storeId,jdbcType=BIGINT}
        and pay_status = 1
        and pay_finish_datetime &gt;= #{startDateTime,jdbcType=TIMESTAMP}
        and pay_finish_datetime &lt;= #{endDateTime,jdbcType=TIMESTAMP}
        and order_status not in (33, 66, 77, 99)
        group by store_id
    </select>
    <select id="getPickUpCodeByStoreId" resultType="java.lang.Boolean">
        select count(*) from order_info info
        where info.store_id=#{storeId,jdbcType=BIGINT}
        and info.order_status=9
        and info.pickup_code in
        <foreach collection="pickUpCodes" item="pickUpCodes" open="(" close=")" separator=",">
            #{pickUpCodes}
        </foreach>
    </select>

    <update id="updateOrderPayStatus">
        update order_info
        set pay_status=#{payStatus,jdbcType=SMALLINT}, 
        payment_serial_num = #{paymentSerialNum,jdbcType=VARCHAR},
        pay_finish_datetime = #{payFinishDateTime,jdbcType=TIMESTAMP},
        updated = now()
        where id=#{orderId,jdbcType=BIGINT}
        and pay_status=0
    </update>
    <update id="updateOrderStatus">
        update order_info
        set order_status=#{newOrderStatus,jdbcType=SMALLINT}, 
        updated = now()
        where id=#{orderId,jdbcType=BIGINT}
        and order_status=#{expectOrderStatus,jdbcType=SMALLINT}
    </update>
    <update id="updateOrderPickupCode">
        update order_info
        set pickup_code=#{pickUpCode,jdbcType=VARCHAR}, 
        updated = now()
        where id=#{orderId,jdbcType=BIGINT}
    </update>
    <update id="updateOrderMoney">
       update order_info
       set 
       order_total_money = #{orderTotalMoney,jdbcType=DECIMAL},
       real_payment_money = #{realPayMoney,jdbcType=DECIMAL}
       where id=#{orderId,jdbcType=BIGINT}
    </update>
    <update id="updateOrderStatusForApplyRefund">
        update order_info
        set order_status=#{orderStatus,jdbcType=SMALLINT},
        apply_refund_datetime = now(),pickup_code=null
        <if test="reason != null">
            ,cancel_reason = #{reason,jdbcType=VARCHAR}
        </if>
       where order_no=#{orderNo,jdbcType=VARCHAR} AND pay_status = 1
        <if test="customerId != null">
            and customer_id = #{customerId,jdbcType=BIGINT}
        </if>
    </update>
    <update id="orderPickup">
        update order_info
        set pickup_code=null, 
        order_status=#{newOrderStatus,jdbcType=SMALLINT}, 
        updated = now(),
        pickup_datetime=now(),
        finish_datetime = now()
        where id=#{orderId,jdbcType=BIGINT}
        and pickup_code=#{pickupCode,jdbcType=VARCHAR}
        and order_status=#{expectOrderStatus,jdbcType=SMALLINT}
    </update>
    <update id="updateOrderStatusForRefundCallback">
        update order_info
        set order_status=77,pickup_code=null,refund_datetime = now()
        where order_no=#{orderNo,jdbcType=VARCHAR} AND pay_status = 1
    </update>
    <update id="updateOrderConfirmDate">
        update order_info
        set accept_order_datetime = #{date,jdbcType=TIMESTAMP}
        where id=#{orderId,jdbcType=BIGINT}
    </update>
    <resultMap id="OrderCountByStatus4StoreMap" type="com.winhxd.b2c.common.domain.order.vo.OrderCountByStatus4StoreVO">
        <result column="allNum" jdbcType="INTEGER" property="allNum"/>
        <result column="unreceivedNum" jdbcType="INTEGER" property="unreceivedNum"/>
        <result column="waitSelfLiftingNum" jdbcType="INTEGER" property="waitSelfLiftingNum"/>
        <result column="waitRefundNum" jdbcType="INTEGER" property="waitRefundNum"/>
        <result column="waitPayNum" jdbcType="INTEGER" property="waitPayNum"/>
        <result column="finishedNum" jdbcType="INTEGER" property="finishedNum"/>
        <result column="refundedNum" jdbcType="INTEGER" property="refundedNum"/>
        <result column="refundingNum" jdbcType="INTEGER" property="refundingNum"/>
        <result column="canceledNum" jdbcType="INTEGER" property="canceledNum"/>
    </resultMap>
    <select id="getOrderCountByStatus" resultMap="OrderCountByStatus4StoreMap">
    	select
			count(*) allNum,
			sum(case when order_status=2 then 1 else 0 end) waitPayNum,
			sum(case when order_status=3 then 1 else 0 end) unreceivedNum,
			sum(case when order_status=9 then 1 else 0 end) waitSelfLiftingNum,
			sum(case when order_status=33 then 1 else 0 end) waitRefundNum,
			sum(case when order_status=22 then 1 else 0 end) finishedNum,
			sum(case when order_status=77 then 1 else 0 end) refundedNum,
			sum(case when order_status=99 then 1 else 0 end) canceledNum,
			sum(case when order_status=66 then 1 else 0 end) refundingNum,
			store_id storeId
		from
			order_info
		where store_id = #{storeId,jdbcType=BIGINT}
		group by store_id
    </select>
    <select id="selectOrderInfoByOrderNoAndCustomer" resultMap="OrderInfoListResultMap">
        select
        <include refid="Order_Info_List"/>
        <include refid="order_item_column"></include>
        from order_info info LEFT JOIN order_item item on item.order_no=info.order_no
        where info.order_no = #{orderNo,jdbcType=VARCHAR}
        <if test="customerId != null">
        and customer_id=#{customerId,jdbcType=BIGINT}
        </if>
        <include refid="order_info_list_orderBy"></include>
    </select>
    <select id="selectOrderInfoByOrderNoAndStore" resultMap="OrderInfoListResultMap">
        select
        <include refid="Order_Info_List"/>
        <include refid="order_item_column"></include>
        from order_info info LEFT JOIN order_item item on item.order_no=info.order_no
        where info.order_no = #{orderNo,jdbcType=VARCHAR}
        <if test="storeId != null">
        and store_id=#{storeId,jdbcType=BIGINT}
        </if>
        <include refid="order_info_list_orderBy"></include>
    </select>
</mapper>