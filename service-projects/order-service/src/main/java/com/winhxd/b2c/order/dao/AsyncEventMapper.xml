<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.winhxd.b2c.order.dao.AsyncEventMapper">
  <resultMap id="BaseResultMap" type="com.winhxd.b2c.common.domain.order.model.AsyncEvent">
    <id column="event_name" jdbcType="VARCHAR" property="eventName" />
    <id column="event_key" jdbcType="VARCHAR" property="eventKey" />
    <result column="event_time" jdbcType="TIMESTAMP" property="eventTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.winhxd.b2c.common.domain.order.model.AsyncEvent">
    <result column="event_data" jdbcType="LONGVARCHAR" property="eventData" />
  </resultMap>
  <sql id="Base_Column_List">
    event_name, event_key, event_time
  </sql>
  <sql id="Blob_Column_List">
    event_data
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from async_event
    where event_name = #{eventName,jdbcType=VARCHAR}
      and event_key = #{eventKey,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from async_event
    where event_name = #{eventName,jdbcType=VARCHAR}
      and event_key = #{eventKey,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.winhxd.b2c.common.domain.order.model.AsyncEvent">
    insert into async_event (event_name, event_key, event_time, 
      event_data)
    values (#{eventName,jdbcType=VARCHAR}, #{eventKey,jdbcType=VARCHAR}, #{eventTime,jdbcType=TIMESTAMP}, 
      #{eventData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.winhxd.b2c.common.domain.order.model.AsyncEvent">
    insert into async_event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventName != null">
        event_name,
      </if>
      <if test="eventKey != null">
        event_key,
      </if>
      <if test="eventTime != null">
        event_time,
      </if>
      <if test="eventData != null">
        event_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventKey != null">
        #{eventKey,jdbcType=VARCHAR},
      </if>
      <if test="eventTime != null">
        #{eventTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventData != null">
        #{eventData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.winhxd.b2c.common.domain.order.model.AsyncEvent">
    update async_event
    <set>
      <if test="eventTime != null">
        event_time = #{eventTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventData != null">
        event_data = #{eventData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where event_name = #{eventName,jdbcType=VARCHAR}
      and event_key = #{eventKey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.winhxd.b2c.common.domain.order.model.AsyncEvent">
    update async_event
    set event_time = #{eventTime,jdbcType=TIMESTAMP},
      event_data = #{eventData,jdbcType=LONGVARCHAR}
    where event_name = #{eventName,jdbcType=VARCHAR}
      and event_key = #{eventKey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.winhxd.b2c.common.domain.order.model.AsyncEvent">
    update async_event
    set event_time = #{eventTime,jdbcType=TIMESTAMP}
    where event_name = #{eventName,jdbcType=VARCHAR}
      and event_key = #{eventKey,jdbcType=VARCHAR}
  </update>
</mapper>